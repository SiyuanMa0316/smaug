include common/Makefile.arch

EIGEN_BINARY = $(BUILD_DIR)/$(EXEC)-native
INCLUDES += -I$(SRC_DIR)/eigen
DLEVEL = 2

SIMD_FLAGS =

CFLAGS += -std=c++11 $(SIMD_FLAGS) $(BMARK_SPECIFIC_CFLAGS)
CPPFLAGS += -DDMA_MODE -DEIGEN_ARCH_IMPL

CORE_CPP_SRCS = core/eigen/activation_functions.cpp
ARCH_CPP_SRCS = arch/eigen.cpp
EIGEN_ALL_CPP_SRCS = $(CORE_CPP_SRCS) $(ARCH_CPP_SRCS)
EIGEN_FULL_PATH_CPP_SRCS = $(patsubst %.cpp, $(SRC_DIR)/%.cpp, $(EIGEN_ALL_CPP_SRCS))

eigen: eigen-target
eigen-target: $(EIGEN_BINARY)

$(EIGEN_BINARY): $(NATIVE_FULL_PATH_SRCS) $(GEM5_FULL_PATH_SRCS) $(EIGEN_FULL_PATH_CPP_SRCS)
	@echo Building benchmark $(EXEC) with Eigen backend.
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(CPPFLAGS) $(CFLAGS) $^ -o $@ $(LFLAGS)

clean-eigen:
	rm -f $(EIGEN_BINARY)
