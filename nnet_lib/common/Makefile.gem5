# Common Make targets for simulating in gem5.
#
# ALADDIN_HOME needs to be defined as an environment variable.
# The gem5 dependencies are listed as .cpp files for compatibility with gem5.
# To compile them with C code, we need to explicitly use gcc.

.PHONY: gem5 gem5-cpu gem5-accel clean-gem5 native

GEM5_DMA_SRC = gem5/dma_interface.c
GEM5_SYS_SRCS = gem5/aladdin_sys_connection.cpp gem5/aladdin_sys_constants.cpp
GEM5_FULL_SRCS = $(patsubst %, $(ALADDIN_HOME)/%, $(GEM5_DMA_SRC) $(GEM5_SYS_SRCS))

ALL_NATIVE_SRCS = $(patsubst %.c, $(SRC_DIR)/%.c, $(SRCS))

GEM5_CFLAGS = -static -O3 -g -fno-exceptions \
							-DDMA_MODE -DDMA_INTERFACE_V3

INCLUDES += -I$(ALADDIN_HOME) -I$(ALADDIN_HOME)/gem5 -Isrc
LFLAGS = -lm -lconfuse
BMARK = $(ACCEL_NAME)

# Output names:
NATIVE = $(BUILD_DIR)/$(BMARK)-native
GEM5_CPU = $(BUILD_DIR)/$(BMARK)-gem5
GEM5_ACCEL = $(BUILD_DIR)/$(BMARK)-gem5-accel

# Debug flags
native: DLEVEL=0
debug: DLEVEL=1
debug-verbose: DLEVEL=2
gem5: DLEVEL=0

# NOTE: Do not remove -std=gnu99! Required for Travis CI toolchain.
native: CFLAGS+=-O3 -std=gnu99
native: native-target
debug: native-target
debug-verbose: native-target

native-target: $(NATIVE)

$(NATIVE): $(ALL_NATIVE_SRCS) $(GEM5_FULL_SRCS)
	@echo Building benchmark $(BMARK) for native platform.
	@mkdir -p $(BUILD_DIR)
	@$(CC) $(CPPFLAGS) $(CFLAGS) $(BMARK_SPECIFIC_CFLAGS) -DDMA_MODE $^ $(INCLUDES) -o $@ $(LFLAGS)

# Builds both standalone CPU version and the HW accelerated version.
gem5: gem5-cpu gem5-accel

# Builds the standalone CPU version only.
gem5-cpu: $(GEM5_CPU)

# Builds the gem5 version with HW acceleration turned on.
gem5-accel: $(GEM5_ACCEL)

$(GEM5_CPU): $(ALL_NATIVE_SRCS) $(GEM5_FULL_SRCS)
	@echo Building benchmark $(BMARK) for gem5.
	@mkdir -p $(BUILD_DIR)
	@$(CC) $(GEM5_CFLAGS) $(CPPFLAGS) $(CFLAGS) $^ $(INCLUDES) -o $@ $(LFLAGS)

$(GEM5_ACCEL): $(ALL_NATIVE_SRCS) $(GEM5_FULL_SRCS)
	@echo Building benchmark $(BMARK) for gem5 with HW acceleration.
	@mkdir -p $(BUILD_DIR)
	@$(CC) $(GEM5_CFLAGS) $(CPPFLAGS) $(CFLAGS) -DGEM5_HARNESS $^ $(INCLUDES) -o $@ $(LFLAGS)

clean-gem5:
	@echo Cleaning gem5 build products...
	@rm -rf $(GEM5_CPU)
	@rm -rf $(GEM5_ACCEL)

clean-native:
	@echo Cleaning native build products...
	@rm -rf $(NATIVE)*
