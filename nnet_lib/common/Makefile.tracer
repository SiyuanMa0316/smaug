############ NOTES ###############
# Define ACCEL_NAME, TRACER_HOME,
# ALADDIN_HOME, WORKLOAD, and SRCS
# before including this.
##################################

CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
COMMON_DIR := $(CURRENT_DIR)
EXEC = $(ACCEL_NAME)
SRC_DIR = src
BUILD_DIR = build

.PHONY: trace-binary dma-trace-binary run-trace clean-trace make-labelmap

##################################
#         TOP LEVEL RULES        #
##################################

dma-trace-binary: $(BUILD_DIR)/$(EXEC)-instrumented

run-trace: trace-binary
	./$(BUILD_DIR)/$(EXEC)-instrumented

##################################
#      COMPILATION FLAGS         #
##################################

TRACER = $(TRACER_HOME)/lib/full_trace.so
LOGGER = $(TRACER_HOME)/lib/trace_logger.llvm
GET_LABELED_STMTS = $(TRACER_HOME)/bin/get-labeled-stmts

MODE = LLVM_TRACE
CPPFLAGS = -I$(ALADDIN_HOME) -I$(COMMON_DIR) -D$(MODE) -DTRACE_MODE -I$(COMMON_DIR)/../$(SRC_DIR)
CPPFLAGS += -DDMA_MODE -I$(ALADDIN_HOME)/gem5
LDFLAGS = -lm -lz -lconfuse

ALL_SRCS = $(patsubst %, $(SRC_DIR)/%, $(SRCS))
_BUILD_VIEW_SRCS = $(patsubst %, ../%, $(ALL_SRCS))

# Due to limitations of the tracer, we have to build the program as a single
# translation unit. The following rules will concatenate all the source files
# into a single source file that #includes them.
CONCAT_PREFIX = $(BUILD_DIR)/_all
CONCAT_FILE = $(CONCAT_PREFIX).c
CONCAT_OBJ = $(CONCAT_PREFIX).o
LLVM_OBJS = $(patsubst %.c, %-opt.llvm, $(CONCAT_FILE))

$(CONCAT_FILE): $(ALL_SRCS)
	@echo Building intermediate concatenated source.
	python $(COMMON_DIR)/concat.py "$(_BUILD_VIEW_SRCS) $(ALADDIN_HOME)/gem5/dma_interface.c" $(CONCAT_FILE)

#########################################################
#        INSTRUMENTATION AND TRACE FILE GENERATION      #
#########################################################

make-labelmap: $(BUILD_DIR)/labelmap

$(BUILD_DIR)/labelmap: $(CONCAT_FILE)
	cd $(BUILD_DIR); \
	$(GET_LABELED_STMTS) ../$^ -- \
			-I$(LLVM_HOME)/lib/clang/3.4/include \
			$(CPPFLAGS) $(BMARK_SPECIFIC_CFLAGS); \
	cd ..

$(BUILD_DIR)/full.llvm: $(LLVM_OBJS)
	llvm-link -o $@ $^ $(LOGGER)

$(BUILD_DIR)/full.s: $(BUILD_DIR)/full.llvm
	llc -O0 -disable-fp-elim -filetype=asm -o $@ $<

$(BUILD_DIR)/$(EXEC)-instrumented: $(BUILD_DIR)/full.s
	$(CXX) -g -O0 -fno-inline -o $@ $< $(LDFLAGS)

$(BUILD_DIR)/%-opt.llvm: $(BUILD_DIR)/%.c $(BUILD_DIR)/labelmap
	clang -g -O1 -S -fno-slp-vectorize -fno-vectorize -fno-unroll-loops \
        -fno-inline -fno-builtin \
				-emit-llvm \
				$(CPPFLAGS) \
        $(BMARK_SPECIFIC_CFLAGS) \
        -o $(BUILD_DIR)/$*.llvm $<; \
	cd $(BUILD_DIR); \
	opt -S -load=$(TRACER) -fulltrace -labelmapwriter -trace-all-callees $*.llvm -o $*-opt.llvm; \
	cd ..

clean-trace:
	cd $(BUILD_DIR); \
	rm -rf $(COMMON_TEMP_DIR); \
	rm -f *.llvm; \
	rm -f *.o; \
	rm -f dynamic_trace.gz; \
	rm -f static_trace; \
	rm -f *-instrumented; \
	rm -f full.s; \
	rm -f labelmap; \
	rm -f _all.c; \
	cd ..
