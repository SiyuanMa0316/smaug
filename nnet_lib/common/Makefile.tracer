############ NOTES ###############
# Define ACCEL_NAME, TRACER_HOME, ALADDIN_HOME, WORKLOAD, and SRCS
# before including this.
##################################

CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
COMMON_DIR := $(CURRENT_DIR)
EXEC = $(ACCEL_NAME)
SRC_DIR = src
BUILD_DIR = build
MODULES = core core/smiv utility arch gem5

.PHONY: dma-trace-binary run-trace clean-trace src-symlinks

##################################
#         TOP LEVEL RULES        #
##################################

dma-trace-binary: DLEVEL=0
dma-trace-binary: build-trace

##################################
#      COMPILATION FLAGS         #
##################################

TRACER = $(TRACER_HOME)/lib/full_trace.so
LOGGER = $(TRACER_HOME)/lib/trace_logger.llvm
GET_LABELED_STMTS = $(TRACER_HOME)/bin/get-labeled-stmts

CPPFLAGS += -I$(ALADDIN_HOME) -I$(COMMON_DIR) \
				  	-I$(COMMON_DIR)/../$(SRC_DIR) -I$(ALADDIN_HOME)/gem5 \
            -DTRACE_MODE -DDMA_MODE

LDFLAGS = -lm -lz -lconfuse

################################
#     BUILD PRODUCT REQS       #
################################

GEM5_DMA_SRC = gem5/dma_interface.c
ALL_TRACER_SRCS = $(SRCS) $(GEM5_DMA_SRC)
SUBBUILDDIRS = $(patsubst %, $(BUILD_DIR)/%, $(MODULES))

LLVM_OBJS = $(patsubst %.c, $(BUILD_DIR)/%-opt.llvm, $(ALL_TRACER_SRCS))

#########################################################
#        INSTRUMENTATION AND TRACE FILE GENERATION      #
#########################################################

build-trace: $(SUBBUILDDIRS) src-symlinks
	@$(MAKE) $(BUILD_DIR)/$(EXEC)-instrumented

src-symlinks:
	@cp -asf $(CURRENT_DIR)/../src/* build/
	@cp -asf $(ALADDIN_HOME)/$(GEM5_DMA_SRC) $(BUILD_DIR)/$(GEM5_DMA_SRC)

$(SUBBUILDDIRS):
	@mkdir -p $(SUBBUILDDIRS)

%-labelmap: %.c
	@$(GET_LABELED_STMTS) $^ -- \
			-I$(LLVM_HOME)/lib/clang/3.4/include \
			$(CPPFLAGS) $(BMARK_SPECIFIC_CFLAGS)
	@cat labelmap >> $(BUILD_DIR)/labelmap

$(BUILD_DIR)/full.llvm: $(LLVM_OBJS)
	@echo Linking instrumented LLVM objects...
	@llvm-link -o $@ $^ $(LOGGER)

$(BUILD_DIR)/full.s: $(BUILD_DIR)/full.llvm
	@llc -O0 -disable-fp-elim -filetype=asm -o $@ $<

$(BUILD_DIR)/$(EXEC)-instrumented: $(BUILD_DIR)/full.s
	@echo Producing final binary...
	@$(CC) -g -O0 -fno-inline -o $@ $^ $(LDFLAGS)

%-opt.llvm: %.c %-labelmap
	@echo Building $<
	@clang -g -O1 -S -fno-slp-vectorize -fno-vectorize -fno-unroll-loops \
        -fno-inline -fno-builtin \
				-mavx \
				-emit-llvm \
				$(CPPFLAGS) \
        $(BMARK_SPECIFIC_CFLAGS) \
        -o $*.llvm $<
	@opt -S -load=$(TRACER) -fulltrace \
				-labelmapwriter -trace-all-callees -i $(BUILD_DIR)/labelmap \
				$*.llvm -o $*-opt.llvm

clean-trace:
	@echo "Cleaning trace build products..."
	@rm -rf $(SUBBUILDDIRS)
	@cd $(BUILD_DIR) && rm -rf *.llvm *.h *.c *.s labelmap $(EXEC)-instrumented
	@rm -f dynamic_trace.gz
	@rm -f labelmap
	@rm -f output_labels.out
