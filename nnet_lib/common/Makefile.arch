# Shared variables required across all Make targets.

SRC_DIR = src
BUILD_DIR = build
COMMON_DIR := $(CURRENT_DIR)
CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

CORE_SRCS = core/activation_functions.c \
						core/convolution.c \
						core/matrix_multiply.c \
						core/zeropad.c \
						core/pooling.c \
						core/batch_norm.c \
						core/flatten.c \
						core/smiv.c \
						core/smiv/convolution.c \
						core/smiv/convolution_simd.c \
						core/smiv/matrix_multiply.c \
						core/smiv/reduction.c

UTILITY_SRCS = utility/init_data.c \
							 utility/utility.c \
							 utility/model_conf_params.c \
							 utility/read_model_conf.c \
							 utility/profiling.c \
							 utility/data_archive.c \
							 utility/data_archive_txt.c \
							 utility/data_archive_common.c \
							 utility/data_archive_bin.c

ARCH_SRCS = arch/common.c

EIGEN_SRCS = core/eigen/activation_functions.cpp \
						 core/eigen/matrix_multiply.cpp \
						 core/eigen/pooling.cpp \
						 core/eigen/batch_norm.cpp \
						 core/eigen/convolution.cpp \
						 utility/init_eigen_data.cpp \
						 utility/eigen_utility.cpp

NNET_FWD_MAIN = nnet_fwd.c
CPP_NNET_FWD_MAIN = nnet_fwd.cpp
CONFIG_H = config.h

SRCS = $(CORE_SRCS) $(UTILITY_SRCS) $(ARCH_SRCS)
GEM5_DMA_SRC = gem5/dma_interface.c
GEM5_SYS_SRCS = gem5/aladdin_sys_connection.cpp gem5/aladdin_sys_constants.cpp
GEM5_UTIL_SRCS = ../../util/m5/m5op_x86.S

ARCH ?= MONOLITHIC

ifeq ($(ARCH), SMIV)
EXEC = nnet-smiv
export WORKLOAD=inner_product_layer_hw,inner_product_layer_acp_hw,convolution_layer_hw,activation_hw,reduction_hw,reduction_acp_hw,batch_norm_layer_hw
SRCS += $(NNET_FWD_MAIN)
else ifeq	($(ARCH), COMPOSABLE)
EXEC = nnet-composable
export WORKLOAD=inner_product_layer_hw,convolution_layer_hw,activation_hw,batch_norm_layer_hw
SRCS += $(NNET_FWD_MAIN)
else ifeq ($(ARCH), MONOLITHIC)
EXEC = nnet-monolithic
export WORKLOAD=nnet_fwd_hw
SRCS += $(NNET_FWD_MAIN)
else ifeq ($(ARCH), EIGEN)
EXEC = nnet-eigen
SRCS += $(CPP_NNET_FWD_MAIN)
else ifeq ($(ARCH), MKLDNN)
EXEC = nnet-mkl
SRCS += $(CPP_NNET_FWD_MAIN)
endif

INCLUDES += -I$(ALADDIN_HOME)/../../include -I$(ALADDIN_HOME) -I$(ALADDIN_HOME)/gem5 -I$(SRC_DIR)
CPPFLAGS += -DARCHITECTURE=$(ARCH) $(INCLUDES)
ifneq ($(CONFUSE_ROOT),)
INCLUDES += -I$(CONFUSE_ROOT)/include
LFLAGS += -L$(CONFUSE_ROOT)/lib
endif
DLEVEL ?= 0

CFLAGS += -g \
					-Wall \
					-Wno-unused-label \
					-Wno-unused-but-set-variable \
					-DDEBUG_LEVEL=$(DLEVEL) \

BMARK_SPECIFIC_CFLAGS = -DDMA_INTERFACE_V3

NATIVE_FULL_PATH_SRCS = $(patsubst %, $(SRC_DIR)/%, $(SRCS))
GEM5_FULL_PATH_SRCS = $(patsubst %, $(ALADDIN_HOME)/%, $(GEM5_DMA_SRC) $(GEM5_SYS_SRCS) $(GEM5_UTIL_SRCS))

LFLAGS += -lm -lconfuse -lrt
