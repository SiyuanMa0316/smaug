.PHONY: src-symlinks

EXEC = smaug
MAIN = src/smaug.cpp
SRCS = src/modelconf/read_model_conf.cpp \
       src/modelconf/model_conf_params.cpp \
       src/operators/ref/ref_batch_norm_op.cpp \
       src/operators/ref/ref_eltwise_add_op.cpp \
       src/operators/ref/ref_convolution_op.cpp \
       src/operators/ref/ref_depthwise_convolution_op.cpp \
       src/operators/ref/ref_inner_product_op.cpp \
       src/operators/ref/ref_pooling_op.cpp \
       src/operators/ref/ref_relu_op.cpp \
       src/operators/ref/ref_elu_op.cpp \
       src/operators/ref/ref_sigmoid_op.cpp \
       src/operators/ref/ref_softmax_op.cpp \
       src/operators/ref/ref_tanh_op.cpp \
       src/operators/smv/smv_convolution_op.cpp \
       src/operators/smv/smv_convolution_tiling.cpp \
			 src/operators/smv/kernels/convolution_simd.c \
       src/core/backend.cpp \
       src/core/tensor.cpp \
       src/core/network.cpp \
			 src/utility/debug_stream.cpp \
			 src/utility/utils.cpp

TESTS = src/operators/ref/ref_convolution_op_test.cpp \
				src/operators/ref/ref_batch_norm_op_test.cpp \
				src/operators/ref/ref_depthwise_convolution_op_test.cpp \
				src/operators/ref/ref_eltwise_ops_test.cpp \
				src/operators/ref/ref_inner_product_op_test.cpp \
				src/operators/ref/ref_pooling_op_test.cpp \
				src/operators/ref/ref_softmax_op_test.cpp \
				src/operators/reorder_op_test.cpp \
				src/operators/smv/smv_convolution_tiling_test.cpp \
				src/operators/smv/smv_convolution_op_test.cpp

GEM5_DMA_SRC = gem5/dma_interface.c gem5/dma_interface.h

ifeq ($(ARCH),)
ARCH=REFERENCE
endif

LFLAGS = -L$(BOOST_ROOT)/lib -lm -lrt -lconfuse -lboost_graph -lboost_program_options
CPPFLAGS = -DCONFIG_BACKEND=$(ARCH)
CFLAGS = -O0 -g
CXXFLAGS = -std=c++11 $(CFLAGS)
INCLUDES = -Isrc \
					 -I$(BUILD_DIR)/gem5 \
					 -I$(BOOST_ROOT)/include \
					 -Isrc/third_party/Catch2/single_include

ifneq ($(CONFUSE_ROOT),)
INCLUDES += -I$(CONFUSE_ROOT)/include
LFLAGS += -L$(CONFUSE_ROOT)/lib
endif

export WORKLOAD=ref_conv3d_f32_nchw_same_padding,ref_conv3d_f32_nchw_valid_padding,ref_batch_norm_f32_nchw_post_conv,ref_batch_norm_f32_post_fc,ref_inner_product_f32_nc,ref_max_pooling_f32_nchw_treemax,ref_max_pooling_f32_nchw_itermax,ref_avg_pooling_f32_nchw,ref_conv2d_f32_nchw_valid_padding,ref_conv2d_f32_nchw_same_padding,ref_eltwise_add_f32

#####################################
####      COMMON BUILD SETUP     ####
#####################################

COMMON_DIR := $(CURRENT_DIR)
CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
BUILD_DIR = build

# Create a build directory that just has symlinks to all the source files, so
# we can build everything seemingly "alongside" the source.
src-symlinks:
	@mkdir -p $(BUILD_DIR)/gem5
	@cp -asf $(CURRENT_DIR)/../src/* $(BUILD_DIR)/
	@$(foreach f, $(GEM5_DMA_SRC), cp -asf $(ALADDIN_HOME)/$(f) $(BUILD_DIR)/$(f);)
