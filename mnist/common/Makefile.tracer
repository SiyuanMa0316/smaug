############ NOTES ###############
# Define ACCEL_NAME, TRACER_HOME,
# ALADDIN_HOME, WORKLOAD, and SRCS
# before including this.
##################################

CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
COMMON_DIR := $(CURRENT_DIR)
EXEC = $(ACCEL_NAME)
SRC_DIR = src
BUILD_DIR = build

.PHONY: trace-binary dma-trace-binary run-trace clean-trace make-labelmap

##################################
#         TOP LEVEL RULES        #
##################################

trace-binary: $(BUILD_DIR)/$(EXEC)-instrumented

dma-trace-binary:
	$(MAKE) -C . DMA_MODE=1 trace-binary

run-trace: trace-binary
	./$(BUILD_DIR)/$(EXEC)-instrumented

#      COMPILATION FLAGS         #
##################################

TRACER = $(TRACER_HOME)/lib/full_trace.so
LOGGER = $(TRACER_HOME)/lib/trace_logger.llvm
GET_LABELED_STMTS = $(TRACER_HOME)/bin/get-labeled-stmts

MODE = LLVM_TRACE
CPPFLAGS = -I$(ALADDIN_HOME) -I$(COMMON_DIR) -D$(MODE) -DTRACE_MODE

ALL_SRCS := $(patsubst %, $(SRC_DIR)/%, $(SRCS))
_BUILD_VIEW_SRCS := $(patsubst %, ../%, $(ALL_SRCS))
LLVM_OBJS := $(patsubst %.c, %-opt.llvm, $(SRCS))

ifneq ($(DMA_MODE),)
	ALL_SRCS += $(ALADDIN_HOME)/gem5/dma_interface.c
	LLVM_OBJS += $(ALADDIN_HOME)/gem5/dma_interface-opt.llvm
	CPPFLAGS += -DDMA_MODE -I$(ALADDIN_HOME)/gem5
endif

#########################################################
#        INSTRUMENTATION AND TRACE FILE GENERATION      #
#########################################################

make-labelmap: $(BUILD_DIR)/labelmap

$(BUILD_DIR)/labelmap: $(ALL_SRCS)
	cd $(BUILD_DIR); \
	$(GET_LABELED_STMTS) $(_BUILD_VIEW_SRCS) -- \
			-I$(LLVM_HOME)/lib/clang/3.4/include \
			$(CPPFLAGS) $(BMARK_SPECIFIC_CFLAGS); \
	cd ..

$(BUILD_DIR)/full.llvm: $(LLVM_OBJS)
	cd $(BUILD_DIR); \
	llvm-link -o ../$@ $^ $(LOGGER); \
	cd ..

$(BUILD_DIR)/full.s: $(BUILD_DIR)/full.llvm
	cd $(BUILD_DIR); \
	llc -O0 -disable-fp-elim -filetype=asm -o ../$@ ../$<; \
	cd ..

$(BUILD_DIR)/$(EXEC)-instrumented: $(BUILD_DIR)/full.s
	cd $(BUILD_DIR); \
	$(CXX) -O0 -fno-inline -o ../$@ ../$< -lm -lz; \
	cd ..

%-opt.llvm: $(SRC_DIR)/%.c make-labelmap
	cd $(BUILD_DIR); \
	clang -g -O1 -S -fno-slp-vectorize -fno-vectorize -fno-unroll-loops \
        -fno-inline -fno-builtin \
				-emit-llvm \
				$(CPPFLAGS) \
        $(BMARK_SPECIFIC_CFLAGS) \
        -o $*.llvm ../$<; \
	opt -S -load=$(TRACER) -fulltrace -labelmapwriter $*.llvm -o $@; \
	cd ..

clean-trace:
	cd $(BUILD_DIR); \
	rm -rf $(COMMON_TEMP_DIR); \
	rm -f *.llvm; \
	rm -f *.o; \
	rm -f dynamic_trace.gz; \
	rm -f static_trace; \
	rm -f *-instrumented; \
	rm -f full.s; \
	rm -f labelmap; \
	cd ..
